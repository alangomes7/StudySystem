package batistaReviver.studentApi.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * Represents a specific offering of a Course in a given year and semester.
 *
 * <p>This entity is mapped to the "study_classes" table and acts as a bridge between courses,
 * professors, and students. It defines a concrete class that students can subscribe to.
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "study_classes")
public class StudyClass {

  /** The unique identifier for the class offering. This value is auto-generated by the database. */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long id;

  /** A unique, auto-generated code for the class (e.g., "CS101-20241"). */
  @Column(name = "class_code", unique = true, nullable = false)
  private String classCode;

  /** The academic year in which the class is offered. */
  @Column(nullable = false)
  private int year;

  /**
   * The semester in which the class is offered (e.g., 1 for the first semester, 2 for the second).
   */
  @Column(nullable = false)
  private int semester;

  /**
   * The course that this class is an offering of. Establishes a many-to-one relationship with the
   * Course entity.
   */
  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "course_id", nullable = false)
  private Course course;

  /**
   * The professor teaching this specific class. Establishes a many-to-one relationship with the
   * Professor entity.
   */
  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "professor_id", nullable = true)
  private Professor professor;

  /**
   * Constructs a new StudyClass instance. This constructor is typically used when creating a new
   * StudyClass object before it's persisted to the database.
   *
   * @param year The academic year.
   * @param semester The semester.
   * @param course The course being offered.
   * @param professor The professor teaching the class.
   */
  public StudyClass(int year, int semester, Course course, Professor professor) {
    this.year = year;
    this.semester = semester;
    this.course = course;
    this.professor = professor;
  }

  /**
   * Constructs a new StudyClass instance without a professor. This is useful for creating a class
   * before a professor has been assigned.
   *
   * @param year The academic year.
   * @param semester The semester.
   * @param course The course being offered.
   */
  public StudyClass(int year, int semester, Course course) {
    this(year, semester, course, null);
  }
}
